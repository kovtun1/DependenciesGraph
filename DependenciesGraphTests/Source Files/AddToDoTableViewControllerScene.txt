//
//  AddToDoTableViewControllerScene.swift
//  Application
//
//  Created by Oleksiy Kovtun on 8/27/17.
//  Copyright   2017  Oleksiy Kovtun. All rights reserved.
//

import Foundation
import Presentation

public final class AddToDoTableViewControllerScene {
  private let vcsCreatable: ViewControllersCreatable
  
  fileprivate let addToDoControllable      : AddToDoControllable
  fileprivate let addToDoSceneDataServable : AddToDoSceneDataServable
  
  public let tableViewController: UITableViewController
  
  public init(
    addToDoControllable         : AddToDoControllable,
    tableViewController         : UITableViewController,
    addToDoSceneDataServable    : AddToDoSceneDataServable,
    vcsCreatable                : ViewControllersCreatable
  ) {
    self.addToDoControllable = addToDoControllable
    self.addToDoSceneDataServable = addToDoSceneDataServable
    self.vcsCreatable = vcsCreatable
    self.tableViewController = tableViewController
    
    self.tableViewController.tableView.dataSource = self.addToDoControllable.dataSource
    self.tableViewController.tableView.delegate = self.addToDoControllable.delegate
    
    (self.addToDoControllable.dataSource as! UITableViewCellsRegisterable).registerCells(
      for: self.tableViewController.tableView
    )
    
    let editToDoSceneInteractionsHandleable =
      (self.tableViewController as! EditToDoSceneInteractionsHandleable)
    
    editToDoSceneInteractionsHandleable.setSaveButtonTouch {
      [unowned self]
      () -> Void in
      let result = self.addToDoSceneDataServable.add(self.addToDoControllable.createdToDo)
      
      switch result {
      case .success:
        self.tableViewController.navigationController?.popViewController(animated: true)
      case .error(let error):
        let alert: UIViewController = self.vcsCreatable.createErrorMessageAlert(withMessage: error)
        
        self.tableViewController.present(alert, animated: true, completion: nil)
      }
    }
  }
}

extension AddToDoTableViewControllerScene: UITableViewControllerContainable {
  
}

extension AddToDoTableViewControllerScene: AddToDoScene {
  public func reset() {
    let emptyToDo = Presentation.ToDo(title: "", description: "")
    
    self.addToDoControllable.setToDo(emptyToDo)
    self.tableViewController.tableView.reloadData()
  }
}
